"0","clone_allele_df <- as.data.frame(genotype_fas) %>%"
"0","  transmute(sequence = x) %>%"
"0","  rownames_to_column(var = ""clone_var"")"
"0",""
"0","allele_index_in_df <- as.vector("
"0","  sapply("
"0","    clone_allele_df$sequence, "
"0","    function(x) match(x, alleles$seq)))"
"0",""
"0","clone_allele_df  %<>%"
"0","  transmute(.,"
"0","              clone_allele_df$clone_var, "
"0","              function(x) {"
"0","                  paste0(., collapse = ""-"") %>% "
"0","                  as.factor()"
"0","            clone_var  = clone_var,"
"0","            allele     = alleles$name[allele_index_in_df],"
"0","            variant_count  = alleles$counts[allele_index_in_df],"
"0","    levels = str_sort("
"0","      unique(allele), "
"0","  ) %>%"
"0","  arrange("
"0","  mutate("
"0","    variant_counter = as.vector("
"0","      unlist("
"0","  ) %>%"
"0","  relocate(., sequence, .after = last_col())"
"0",""
"0",""
"0",""
"0","# update clone_allele_df with metadata information"
"0","# create index vector where sample ids correspond to the correct "
"0","# names in the metadata data.frame"
"0","clone_allele_df <- clone_allele_df %>%"
"0","  mutate("
"0","    id       = metadata_df$real_id[index],"
"0","    colony   = metadata_df$colony[index],"
"0","    family   = metadata_df$family[index]"
"0","  ) %>%"
"0",""
"0","clone_allele_df  %<>% arrange(., variant_no)"
"0",""
"0","# clone_allele_df"
"0","# $ id              : sample individual"
"0","# $ variant_no      : allele as number"
"0","# $ variant_count   : allele total count"
"0","# $ maturity        : age by maturity, either mother (M) or pup (P)"
"0","# $ sequence        : MHC DQB class II exon sequence of clone_var"
"0",""
"0",""
