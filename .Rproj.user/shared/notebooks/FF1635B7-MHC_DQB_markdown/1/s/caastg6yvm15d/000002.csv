"0",""
"0","# exclude putative artefacts from main data.frame"
"0","clone_allele_df <- clone_allele_df[1:771,] %>%"
"0","  mutate(., variant_no = str_pad(variant_no, 2, pad = ""0""))"
"0",""
"0","# create a list of genotypes"
"0","called_clones <- vector(mode = ""list"", length = 1)"
"0","called_clones[[1]] <- seq_along(unlist(attributes(clone_allele_df$id)[1]))"
"0","names(called_clones[[1]]) <- unlist(attributes(clone_allele_df$id)[1])"
"0",""
"0",""
"0","id <- as.character(unique(clone_allele_df$id))"
"0","called_clones <- lapply(id, function(x) "
"0","  as.character("
"0","    unique("
"0","      clone_allele_df$variant_no[which(!is.na(match(clone_allele_df$id,x)))]"
"0","      )"
"0","    )"
"0","  ) %>%"
"0","  `names<-`(., id)"
"0",""
"0","# filter out individuals that do not fit the presumed ploidy of the genotyped locus"
"0","# by deleting the least likely allele as we assume diploidy"
"0","ploidy_mismatches <- which(lapply(called_clones, length) > 2)"
"0","called_clones[ploidy_mismatches] <- lapply(called_clones[ploidy_mismatches], "
"0","                                           function(x) x[1:2])"
"0",""
"0",""
"0","called_clones <- lapply(called_clones, function(x){"
"0","  c(x[1], tail(x,1))"
"0","})"
"0",""
"0","# build a data frame like"
"0","#                 locusA locusB locusC"
"0","#       genotype1     11   <NA>     22"
"0","#       genotype2     11     34     22"
"0","#       genotype3     12     55     21"
"0","#       genotype4     32     15     22"
"0","# that can be coerced into a ""genind"""
"0","clone_df <- lapply(called_clones, function(x)"
"0","  paste0(x, collapse = ""/"")) %>%"
"0","  as.data.frame(.) %>%"
"0","  t(.)"
"0",""
"0",""
"0","# build data frame with additional info for strata in genind class object"
"0","n <- rownames(clone_df)"
"0","ind_n <- match(n,clone_genotype_df$sample_id)"
"0","strata_df <- data.frame("
"0","  id   = n, "
"0","  fmly = clone_genotype_df$family[ind_n])"
"0",""
"0",""
"0","# coerce to genind"
"0","clone_gen <- df2genind(clone_df, "
"0","                          ploidy = 2, "
"0","                          sep = ""/"","
"0","                          pop = strata_df$pops,"
"0","                          strata = strata_df)"
"0",""
"0","# Already saved. "
"0","# save.df <- genind2df(clone_gen, sep = ""/"")"
"0","# write.table(save.df, file = ""data/clone_gen.txt"", sep = ""\t"")"
"0",""
