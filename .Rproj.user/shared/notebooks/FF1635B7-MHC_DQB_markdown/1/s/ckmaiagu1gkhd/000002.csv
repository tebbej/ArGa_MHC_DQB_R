"0",""
"0","allele_summary <- matrix(nrow = length(unique(clone_allele_df$id)),"
"0","                         ncol = length(unique(clone_allele_df$allele))) %>%"
"0","  `rownames<-`(., as.character(unique(clone_allele_df$id))) %>%"
"0","  `colnames<-`(., as.character("
"0","    str_sort("
"0","      levels("
"0","        clone_allele_df$allele), "
"0","      numeric = T)))"
"0",""
"0","# fill matrix with info on which and how many alleles are found in the "
"0","# clones for each individual fur seal"
"0","  alleles_in_id <- summary("
"0","    clone_allele_df$allele[clone_allele_df$id == unique(clone_allele_df$id)[i]]"
"0","  allele_summary[i, ] <- alleles_in_id[str_sort(names(alleles_in_id), "
"0","                                                numeric = T)]"
"0","}"
"0",""
"0","# convert to data.frame and create a ""tidy"" version, "
"0","# ggplot and tidyverse can handle easily"
"0","allele_summary %<>% "
"0","  t() %>%"
"0","  as.data.frame() %>%"
"0","  rownames_to_column(""alleles"") %>%"
"0","               names_to = ""sample_id"", "
"0","               values_to = ""counts"") %>%"
"0","  mutate(., alleles = factor("
"0","    alleles, "
"0","    levels = str_sort("
"0","      unique(alleles), "
"0","      numeric = T)),"
"0","    sample_id = as.factor(sample_id)) %>%"
"0",""
"0","index2 <- match(as.character(allele_summary$sample_id), metadata_df$real_id)"
"0","allele_summary <- allele_summary %>%"
"0","  mutate(colony = metadata_df$colony[index2],"
"0","         maturity = metadata_df$maturity[index2],"
"0","         family = metadata_df$family[index2],"
"0","         sample_id = factor(sample_id, "
"0","                            levels = rev("
"0","                              levels(sample_id)))) %>%"
"0","  arrange(desc(sample_id)) %>%"
"0","pair_match_index <- match(allele_summary$sample_id, metadata_df_pairs$real_id)"
"0","pair_match_index <- which(is.na(pair_match_index) == T)"
"0",""
"0","allele_summaryX <- allele_summaryX[allele_summaryX$alleles %in% "
"0","                                     levels(allele_summaryX$alleles)[1:19],]"
